import random

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, InputMedia, InputFile, ReplyKeyboardRemove
from telegram.ext import CallbackContext

import commands
from config import Session, BLOCKS_COUNT, smiles_gradient, stickers
from base.models import *
from commands.bot_utils import button_handler, form_paged_message, choose_block_template

page_size = 5


async def admin_menu(update: Update, context: CallbackContext,
                     admin: User, session: Session):
    message_text = (f"<b>{random.choice('üíªüñ•üïπüéõüìªüóÑüóÇ')} –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Letique Cosmetics</b>\n\n"
                    f"üìã –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ: \n"
                    f"- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                    f"- –î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ —Ç–µ—Å—Ç—ã\n"
                    f"- –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
                    f"- –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n\n"
                    f"‚úÖ –ò—â–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö")
    keyboard = []

    keyboard += [[InlineKeyboardButton(
        "üì© –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
        callback_data=f'admin_menu::notification_settings_999_{admin.button_number}')],
        [InlineKeyboardButton(
            "üë§  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            callback_data=f'admin_menu::users_monitoring_{admin.button_number}')],
        [InlineKeyboardButton(
            "üìã –¢–µ—Å—Ç—ã",
            callback_data=f'admin_menu::questions_settings_{admin.button_number}')],
        [InlineKeyboardButton(
            "üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã",
            callback_data=f'admin_menu::products_settings_{admin.button_number}')],
        [InlineKeyboardButton(
            "‚ùå –í—ã—Ö–æ–¥",
            callback_data=f'admin_menu::exit_admin_{admin.button_number}')],
    ]
    markup = InlineKeyboardMarkup(keyboard)

    if admin.state == "admin_menu":
        await context.bot.edit_message_text(chat_id=admin.chat_id,
                                            message_id=admin.last_message_id,
                                            text=message_text,
                                            reply_markup=markup,
                                            parse_mode="HTML")
    else:
        admin.state = "admin_menu"

        message = await context.bot.send_message(chat_id=admin.chat_id,
                                                 text=message_text,
                                                 reply_markup=markup,
                                                 parse_mode="HTML")
        admin.last_message_id = message.message_id

    admin.save(session)


async def notification_settings(update, context, admin, session, data):
    # change the notifications
    if data != 999:
        if admin.admin_notifications & (2 ** data):
            admin.admin_notifications -= 2 ** data
        else:
            admin.admin_notifications += 2 ** data

    smiles = {True: "üü¢", False: "üî¥"}
    # display them
    message_text = ("üì© –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n"
                    "‚úÖ –ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è/–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")

    keyboard = [[InlineKeyboardButton(
        f"{smiles[bool(admin.admin_notifications & (2 ** 0))]} –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å üë§",
        callback_data=f'admin_menu::notification_settings_0_{admin.button_number}')],
        [InlineKeyboardButton(
            f"{smiles[bool(admin.admin_notifications & (2 ** 1))]} –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω ‚úîÔ∏è",
            callback_data=f'admin_menu::notification_settings_1_{admin.button_number}')],
        [InlineKeyboardButton(
            f"{smiles[bool(admin.admin_notifications & (2 ** 2))]} –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã üèÅ",
            callback_data=f'admin_menu::notification_settings_2_{admin.button_number}')],
        [InlineKeyboardButton(
            "‚óÄÔ∏è –í—ã—Ö–æ–¥",
            callback_data=f'admin_menu::menu_{admin.button_number}')],
    ]
    markup = InlineKeyboardMarkup(keyboard)
    await context.bot.edit_message_text(chat_id=admin.chat_id,
                                        message_id=admin.last_message_id,
                                        text=message_text,
                                        reply_markup=markup,
                                        parse_mode="HTML")
    admin.save(session)


async def exit_admin(update, context, admin, session):
    admin.is_admin = False
    admin.current_block = 0
    message_text = "üîê –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    await context.bot.send_sticker(chat_id=admin.chat_id,
                                   sticker=stickers["turn"])
    await context.bot.edit_message_text(chat_id=admin.chat_id,
                                        text=message_text,
                                        message_id=admin.last_message_id,
                                        parse_mode="HTML")
    admin.state = "start"
    await commands.main_menu.main_menu(update, context, admin, session)
    admin.save(session)
