import random

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackContext

from base.utils import get_user
from config import Session, BLOCKS_COUNT, stickers
from commands.main_menu import main_menu
import commands


async def start(update: Update, context: CallbackContext):
    session = Session()
    user = await get_user(update, session)

    if user.is_admin:
        user.state = "help"
        await commands.admin.admin_menu.admin_menu(update, context, user, session)
        user.save(session)
        return

    elif user.state == "quiz_solving":
        message_text = "–£ –≤–∞—Å –Ω–∞—á–∞—Ç —Ç–µ—Å—Ç. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –µ–≥–æ"
        await context.bot.send_message(chat_id=user.chat_id,
                                       text=message_text)
    elif user.state == "initial":
        await commands.admin.admin.notify(context, user, session, "register")
        user.state = "start"

        smile = random.choice('üìïüìóüìòüìôüìöüìí')
        message_text = ("ü§ñ –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –æ–±—É—á–∞—é—â–∏–π –±–æ—Ç <i>Letique Cosmetics</i>"
                        f"\n\nüì¶ –í–∞–º –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã {BLOCKS_COUNT} –±–ª–æ–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∏—Ö"
                        ""
                        "\n\n‚ùì –í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞ –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç –ø–æ –∏–∑—É—á–µ–Ω–Ω–æ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª—É"
                        f"\n\n–í {smile} –ú–µ–Ω—é /menu –≤—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã "
                        f"–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –±–ª–æ–∫–∞–º"
                        "\n\n–ü—Ä–∏—Å—Ç—É–ø–∏–º?")
        keyboard = [
            [InlineKeyboardButton("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å", callback_data=f'products::begin_{user.button_number}')],
            [InlineKeyboardButton("‚öô –ï—â—ë", callback_data=f'menu::more_{user.button_number}')]
        ]
        markup = InlineKeyboardMarkup(keyboard)
        message = await context.bot.send_message(chat_id=user.chat_id,
                                                 text=message_text,
                                                 reply_markup=markup,
                                                 parse_mode="HTML")
        user.last_message_id = message.message_id

        await context.bot.send_sticker(chat_id=user.chat_id,
                                       sticker=stickers['hello'])

    else:
        user.state = "start"
        await main_menu(update, context, user, session)
        return

    user.save(session)


async def help_handler(update: Update, context: CallbackContext):
    session = Session()
    user = await get_user(update, session)

    if user.is_admin:
        user.state = "help"
        await commands.admin.admin_menu.admin_menu(update, context, user, session)
        user.save(session)
        return

    if user.state == "quiz_solving":
        message_text = "–£ –≤–∞—Å –Ω–∞—á–∞—Ç —Ç–µ—Å—Ç. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –µ–≥–æ"
        await context.bot.send_message(chat_id=user.chat_id,
                                       text=message_text)
        user.save(session)
        return

    smile = random.choice('üìïüìóüìòüìôüìöüìí')
    message_text = ("ü§ñ –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –æ–±—É—á–∞—é—â–∏–π –±–æ—Ç <i>Letique Cosmetics</i>"
                    f"\n\nüì¶ –í–∞–º –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã {BLOCKS_COUNT} –±–ª–æ–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∏—Ö"
                    ""
                    "\n\n‚ùì –í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞ –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç –ø–æ –∏–∑—É—á–µ–Ω–Ω–æ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª—É"
                    ""
                    f"\n\n–ß–µ—Ä–µ–∑ {smile} –ú–µ–Ω—é /menu –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                    "- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n"
                    "- –ü—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ\n"
                    "- –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã\n")
    keyboard = [
        [InlineKeyboardButton(f"{smile} –ú–µ–Ω—é", callback_data=f'menu::main_{user.button_number}')],
    ]
    markup = InlineKeyboardMarkup(keyboard)
    message = await context.bot.send_message(chat_id=user.chat_id,
                                             text=message_text,
                                             reply_markup=markup,
                                             parse_mode="HTML")
    user.last_message_id = message.message_id
    user.state = "main_menu"
    user.save(session)
